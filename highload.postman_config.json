{
	"info": {
		"_postman_id": "b4d7f11c-e26a-48e3-8b59-b13d150f3e7b",
		"name": "highload",
		"description": "### Welcome to Postman! This is your first collection. \n\nCollections are your starting point for building and testing APIs. You can use this one to:\n\n• Group related requests\n• Test your API in real-world scenarios\n• Document and share your requests\n\nUpdate the name and overview whenever you’re ready to make it yours.\n\n[Learn more about Postman Collections.](https://learning.postman.com/docs/collections/collections-overview/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "48953559",
		"_collection_link": "https://aleksgright-8488121.postman.co/workspace/Grigorev-Aleksandr's-Workspace~340537ce-55cb-40bf-8708-c7c8913b1902/collection/48953559-b4d7f11c-e26a-48e3-8b59-b13d150f3e7b?action=share&source=collection_link&creator=48953559"
	},
	"item": [
		{
			"name": "Item API",
			"item": [
				{
					"name": "findItemByName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/item/findByName?name=snacker",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"item",
								"findByName"
							],
							"query": [
								{
									"key": "name",
									"value": "snacker"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "createItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"blin4iik\",\n    \"calories\": 12,\n    \"carbs\": 2,\n    \"protein\": 4,\n    \"fats\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/item/create",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"item",
								"create"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "updateItem",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n\t\"name\": \"snacker\",\r\n    \"calories\": 12,\r\n    \"carbs\": 2,\r\n    \"protein\": 4,\r\n    \"fats\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/item/update",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"item",
								"update"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Meal API",
			"item": [
				{
					"name": "createMeal",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"itemId\": 1,\r\n    \"count\": 17,\r\n    \"time\": \"dinner\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/meal/create",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"meal",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "findMealByDate",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/meal/findByDate?year=2025&month=10&day=28",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"meal",
								"findByDate"
							],
							"query": [
								{
									"key": "year",
									"value": "2025"
								},
								{
									"key": "month",
									"value": "10"
								},
								{
									"key": "day",
									"value": "28"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateMeal",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 4,\r\n\t\"itemId\": \"2\",\r\n    \"count\": 2,\r\n    \"time\": \"dinner\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/meal/update",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"meal",
								"update"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": ""
		},
		{
			"key": "port",
			"value": "",
			"type": "default"
		}
	]
}